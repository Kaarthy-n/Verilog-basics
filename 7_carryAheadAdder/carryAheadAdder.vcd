$date
	Sat May 10 20:08:43 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cla_adder_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var parameter 32 # N $end
$var reg 4 $ a [3:0] $end
$var reg 4 % b [3:0] $end
$var reg 1 & cin $end
$scope module cla $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 1 & cin $end
$var wire 4 ) g [3:0] $end
$var wire 4 * p [3:0] $end
$var wire 4 + s [3:0] $end
$var wire 1 " cout $end
$var wire 5 , c [4:0] $end
$var parameter 32 - N $end
$scope begin carry_logic[0] $end
$var parameter 2 . i $end
$upscope $end
$scope begin carry_logic[1] $end
$var parameter 2 / i $end
$upscope $end
$scope begin carry_logic[2] $end
$var parameter 3 0 i $end
$upscope $end
$scope begin carry_logic[3] $end
$var parameter 3 1 i $end
$upscope $end
$scope begin sum_logic[0] $end
$var parameter 2 2 j $end
$upscope $end
$scope begin sum_logic[1] $end
$var parameter 2 3 j $end
$upscope $end
$scope begin sum_logic[2] $end
$var parameter 3 4 j $end
$upscope $end
$scope begin sum_logic[3] $end
$var parameter 3 5 j $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 5
b10 4
b1 3
b0 2
b11 1
b10 0
b1 /
b0 .
b100 -
b100 #
$end
#0
$dumpvars
b11110 ,
b1000 +
b110 *
b1001 )
b1011 (
b1101 '
0&
b1011 %
b1101 $
1"
b1000 !
$end
#10000
0"
b1100 !
b1100 +
b100 )
b11 *
b1111 ,
1&
b101 %
b101 (
b110 $
b110 '
#20000
1"
b0 !
b0 +
b1 )
b1110 *
b11110 ,
0&
b1 %
b1 (
b1111 $
b1111 '
#30000
0"
b0 ,
b0 !
b0 +
b0 )
b0 *
b0 %
b0 (
b0 $
b0 '
#40000
